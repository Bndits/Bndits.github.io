<html>
<head>
<title>Media Player</title>
</head>
<body><label for="videos">Choose a video:</label>
<select id="videos">
</select>
<iframe id="player" width=100% height=100% allow="autoplay; encrypted-media" frameborder="0"></iframe>
<script>
var url = document.getElementById("url");
var select = document.getElementById("videos");
var songIds = ["jsDGb3if9bw", "nujn6wbr-e8", "fJkKvZH6eog", "Q_e5ZoOGWVk", "EDjYDfRunUk"];
var songNames = ["雨とペトラ", "As it was", "アンドロイドガール", "Otome Dissection", "Otome Dissection (TeddyLoid Alllies)"];
var currentIndex = 0;
var player = document.getElementById("player");

for (var i = 0; i < songIds.length; i++) {
  var elem = document.createElement("option");
  elem.value = songIds[i];
  elem.innerText = songNames[i];
  select.appendChild(elem);
}

select.onchange = function () {
  player.src = "https://youtube.com/embed/" + select.value + "?autoplay=1&enablejsapi=1";
}

var tag = document.createElement('script');
tag.src = "https://www.youtube.com/player_api";
var scriptTag = document.getElementsByTagName('script')[0];
scriptTag.parentNode.insertBefore(tag, scriptTag);

var ik_player;
function onYouTubeIframeAPIReady() {
  player = new YT.Player('ik_player', {
    height: '390',
    width: '640',
    videoId: '5EnL2WXsxNQ',
    events: {
      'onReady': onPlayerReady,
      'onStateChange': onPlayerStateChange,
      'onPlaybackQualityChange': onPlayerPlaybackQualityChange,
      'onPlaybackRateChange': onPlayerPlaybackRateChange,
      'onError': onPlayerError,
      'onApiChange': onPlayerApiChange
    }
  });
}

// The API will call this function when the video player is ready.
function onPlayerReady(event) {
  console.log('player is ready');
}

// The API calls this function when the player's state changes.
function onPlayerStateChange(event) {
  switch (event.data) {
    case YT.PlayerState.UNSTARTED:
      console.log('unstarted');
      break;
    case YT.PlayerState.ENDED:
      console.log('ended');
      break;
    case YT.PlayerState.PLAYING:
      console.log('playing');
      break;
    case YT.PlayerState.PAUSED:
      console.log('paused');
      break;
    case YT.PlayerState.BUFFERING:
      console.log('buffering');
      break;
    case YT.PlayerState.CUED:
      console.log('video cued');
      break;
  }
}

function onPlayerPlaybackQualityChange(playbackQuality) {
 console.log('playback quality changed to ' + playbackQuality.data);
}

function onPlayerPlaybackRateChange(playbackRate) {
 console.log('playback rate changed to ' + playbackRate.data);
}

function onPlayerError(e) {
 console.log('An error occurred: ' + e.data);
}

function onPlayerApiChange() {
 console.log('The player API changed');
}
</script>
</body></html>
